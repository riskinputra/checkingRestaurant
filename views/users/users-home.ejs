<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>My Google Map</title>

    <link href="https://cdnjs.cloudflare.com/ajax/libs/normalize/7.0.0/normalize.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Roboto" rel="stylesheet">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link href="https://code.getmdl.io/1.3.0/material.indigo-pink.min.css" rel="stylesheet">

    <style>
      #map {
        height: 100%; }

      .mdl-card {
        height: 200px;
        margin: 16px auto;
        text-decoration: none; }
      .mdl-grid:last-of-type .mdl-card:last-child {
        margin-bottom: 128px; }
      .mdl-grid--no-spacing .mdl-card {
        margin-top: 0; }
      .mdl-card.map {
        width: 100% }
      .mdl-card > .mdl-card__title,
      .mdl-card > .mdl-card__subtitle-text {
        color: #fff;
        background-color: #46B6AC; }
      .mdl-button--fab {
        position: fixed;
        display: block;
        right: 0;
        bottom: 0;
        margin-right: 40px;
        margin-bottom: 40px;
        z-index: 900; }
    </style>
  </head>

  <body>
    <!-- Always shows a header, even in smaller screens. -->
    <div class="mdl-layout mdl-js-layout mdl-layout--fixed-drawer mdl-layout--fixed-header">
      <header class="mdl-layout__header">
        <div class="mdl-layout__header-row">
          <!-- Title -->
          <span class="mdl-layout-title">Your Restaurants</span>
        </div>
      </header>
      <div class="mdl-layout__drawer">
        <span class="mdl-layout-title">Title</span>
        <nav class="mdl-navigation">
          <a class="mdl-navigation__link" href="#">
            <i class="material-icons">history</i>
            &nbsp;&nbsp;CHECKIN HISTORY
          </a>
          <a class="mdl-navigation__link" href="#">
            <i class="material-icons">favorite</i>
            &nbsp;&nbsp;MOST VISITED PLACE
          </a>
        </nav>
      </div>
      <main class="mdl-layout__content">
        <div class="page-content">
          <div class="mdl-grid mdl-grid--no-spacing">
            <div class="mdl-cell mdl-cell--12-col-phone mdl-cell--12-col-desktop">
              <div class="mdl-card mdl-shadow--2dp map">
                <div id="map"></div>
              </div>
            </div>
          </div>
          <div class="mdl-grid">
            <% if (rowsUser.Restaurants !== undefined) { %>
              <% rowsUser.Restaurants.forEach(row => { %>
                <a href="/restaurants/detail/<%= row.id %>" class="mdl-card mdl-shadow--2dp mdl-cell mdl-cell--12-col-phone mdl-cell--4-col-desktop">
                  <div class="mdl-card__title">
                    <div>
                      <h4 class="mdl-card__title-text"><%= row.name %></h4>
                      <p><%= row.territory %></p>
                    </div>
                  </div>
                  <div class="mdl-card__supporting-text mdl-card--expand">
                    <p><%= row.CheckedIn.details %></p>
                  </div>
                </a>
              <% }) %>
            <% } %>
          </div>
        </div>
        <a class="mdl-button mdl-js-button mdl-button--fab mdl-js-ripple-effect mdl-button--colored" href="users/<%= rowsUser.id %>/checkin?territory=<%= rowsUser.Restaurants[0].territory %>">
          <i class="material-icons">place</i>
        </a>
      </main>
    </div>

    <script>
      function initMap() {
        // Option
        let options = {
          zoom: 15,
          center: {lat: -6.175110, lng: 106.865039},
          disableDefaultUI: true
        }

        // new map
        const map = new google.maps.Map(document.getElementById('map'), options)
        const image = 'https://i.imgur.com/kPhiD5j.png';

        // Marker
        let markers = []
        <% rowsRestaurant.forEach(row => { %>
            markers.push({
              coords: {
                lat: <%= row.latitude %>,
                lng: <%= row.longitude %>
              },
              content: '<b><%= row.name %></b><br/><%= row.address %>'
            })
        <% }) %>

        markers.forEach(function(data) {
          addMarker(data)
        })

        function addMarker(props) {
          let marker = new google.maps.Marker({
            position:props.coords,
            map:map,
            icon:image
          })

          let infoWindow = new google.maps.InfoWindow({
            content:props.content
          })

          marker.addListener('click', function() {
            infoWindow.open(map, marker)
          })
        }

        // current Location
        var geocoder = new google.maps.Geocoder;
        let currentInfoWindow = new google.maps.InfoWindow;

        // Try HTML5 geolocation.
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            var pos = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };

            geocoder.geocode({'location':pos}, function(results) {
              results.forEach(dataResult => {
                dataResult.address_components.forEach(dataRe => {
                  if (dataRe.types[0] == 'administrative_area_level_3' && <%= bool %>) {
                    window.location.replace(`http://localhost:3000/users?territory=${dataRe.long_name}`)
                  }
                })
              })
            })

            currentInfoWindow.setPosition(pos);
            currentInfoWindow.setContent('Your Location Here ..!');
            currentInfoWindow.open(map);
            map.setCenter(pos);
          }, function() {
            handleLocationError(true, currentInfoWindow, map.getCenter());
          });
        } else {
          // Browser doesn't support Geolocation
          handleLocationError(false, currentInfoWindow, map.getCenter());
        }
      }

      function handleLocationError(browserHasGeolocation, currentInfoWindow, pos) {
        currentInfoWindow.setPosition(pos);
        currentInfoWindow.setContent(browserHasGeolocation ?
                              'Error: The Geolocation service failed.' :
                              'Error: Your browser doesn\'t support geolocation.');
        currentInfoWindow.open(map);
      }
    </script>

    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBCz4uuvcIers4wkNU6ZAkJS9m6ln0IRH8&callback=initMap">
    </script>
    <script defer src="https://code.getmdl.io/1.3.0/material.min.js"></script>
  </body>
</html>
